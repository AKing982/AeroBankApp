CREATE DATABASE AeroBankApp;

CREATE TABLE registration (
    id INT PRIMARY KEY auto_increment NOT NULL,
    firstName VARCHAR(225) NOT NULL,
    lastName VARCHAR(225) NOT NULL,
    username VARCHAR(225) NOT NULL,
    email VARCHAR(225) NOT NULL,
    address VARCHAR(225) NOT NULL,
    zipcode VARCHAR(9) NOT NULL,
    pinNumber VARCHAR(8) NOT NULL,
    password VARCHAR(50) NOT NULL,
    deposit DECIMAL(10,2) NOT NULL
 );

 CREATE TABLE Account_Users
 (
    account_id BIGINT NOT NULL,
    user_id BIGINT NOT NULL,
    PRIMARY KEY(accountID, userID),
    FOREIGN KEY(accountID) REFERENCES Account(id),
    FOREIGN KEY(user_id) REFERENCES Users(id)
 );

 CREATE TABLE Users
 (
    userID INT PRIMARY KEY auto_increment,
    userName VARCHAR(225) NOT NULL,
    email VARCHAR(225) NOT NULL,
    password VARCHAR(225) NOT NULL,
    pinNumber CHAR(6) NOT NULL,
    accountNumber VARCHAR(225) NOT NULL,
    isAdmin BOOL,
    isEnabled BOOL
 );

 CREATE TABLE CheckingAccount
 (
    id int primary key auto_increment,
    accountCode VARCHAR(2) NOT NULL,
    userID INT NOT NULL,
    accountName VARCHAR(225) NOT NULL,
    balance DECIMAL(10, 2) NOT NULL,
    interest_rate DECIMAL(10, 2) NOT NULL,
    minimum_balance DECIMAL(10, 2) NOT NULL,

    FOREIGN KEY(userID) REFERENCES users(userID)
 );

 CREATE TABLE IF NOT EXISTS UserLog
 (
    id INT PRIMARY KEY AUTO_INCREMENT,
    userID INT NOT NULL,
    lastLogin DATE,

    FOREIGN KEY(userID) REFERENCES users(userID)
 );

 CREATE TABLE Profile
 (

 )

 CREATE TABLE Account(
    acctID PRIMARY KEY auto_increment INT NOT NULL,
    accountCode VARCHAR(225) NOT NULL,
    userID INT NOT NULL,
    aSecID INT NOT NULL,
    accountName VARCHAR(225) NOT NULL,
    balance DECIMAL(10, 3) NOT NULL,
    interest DECIMAL(10, 3) NOT NULL,
    accountType VARCHAR(225) NOT NULL,
    hasDividend BOOL,
    isRentAccount BOOL,
    hasMortgage BOOL,



    FOREIGN KEY (userID) REFERENCES Users(id)
);


 CREATE TABLE IF NOT EXISTS BalanceHistory
 (
     historyID INT PRIMARY KEY AUTO_INCREMENT,
     accountID INT NOT NULL,
     transactionID INT NOT NULL,
     balance DECIMAL(10, 2) NOT NULL,
     adjustedBalance DECIMAL(10, 2) NOT NULL,
     lastBalance DECIMAL(10, 2) NOT NULL,
     transactionType ENUM('Deposit', 'Withdraw', 'Purchase', 'Transfer'),
     createdBy VARCHAR(225) NOT NULL,
     createdAt datetime NOT NULL,
     updatedBy VARCHAR(225) NOT NULL,
     currency currency NOT NULL,
     posted datetime NOT NULL,

     FOREIGN KEY(accountID) REFERENCES Account(accountID),
     FOREIGN KEY(transactionID) REFERENCES

 );

